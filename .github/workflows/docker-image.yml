name: Docker Image CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: '11' # The JDK version to make available on the path.
        java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
        architecture: x64 # (x64 or x86) - defaults to x64

    - name: Setup Clojure
      # You may pin to the exact commit or the version.
      # uses: DeLaGuardo/setup-clojure@91054c3b9dc15fdc6a2f45be47405d891e672ef0
      uses: DeLaGuardo/setup-clojure@master
      with:
        cli: '1.10.2.796'

    - name: Build jar
      run: |
        ls -laht
        clojure -M:uberdeps

    - name: Docker Buildx
      # You may pin to the exact commit or the version.
      # uses: crazy-max/ghaction-docker-buildx@126d331dc69f4a1aa02452e374835e6a5d565613
      uses: crazy-max/ghaction-docker-buildx@v3.3.1
      with:
        # Buildx version. Example: v0.3.0
        buildx-version: latest
        # QEMU static binaries Docker image version. Example: 4.2.0-7
        qemu-version: latest

    - name: Docker Login
      # You may pin to the exact commit or the version.
      # uses: docker/login-action@f3364599c6aa293cdc2b8391b1b56d0c30e45c8a
      uses: docker/login-action@v1.8.0
      with:
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}

    - name: Build the Docker image
      run: |
        docker buildx build --output "type=image,push=true" \
        --platform linux/arm64,linux/amd64 \
        --tag ${{ secrets.USERNAME }}/ecobee-exporter:latest .
